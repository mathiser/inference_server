version: '3'

services:
  reverse-proxy:
    restart: always
    image: traefik:v2.6
    hostname: reverse-proxy
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.file.directory=/configuration/
      - --providers.file.watch=true
    ports:
      - 80:80
      - 443:443
    networks:
      - inference_server_private
    labels:
      traefik.enable: true
    volumes:
      - ./traefik/certs/:/tools/certs/
      - ./traefik/configuration/:/configuration/
      - ${DOCKER_SOCKET}:${DOCKER_SOCKET}

  public-api:
    restart: always
    networks:
      - inference_server_private
    image: mathiser/inference_server:public_api_dev
    hostname: ${PUBLIC_API_HOSTNAME}
    env_file:
      - .env
    ports:
      - ${PUBLIC_API_PORT}
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_${PUBLIC_API_HOSTNAME}.rule=Host(`${PROXY_URL}`)"
      - "traefik.http.services.${PROJECT_NAME}_${PUBLIC_API_HOSTNAME}.loadbalancer.server.port=${PUBLIC_API_PORT}"
      - "traefik.http.routers.${PROJECT_NAME}_${PUBLIC_API_HOSTNAME}.tls=${HTTPS_ON}"
    volumes:
      - ./mounts/logs:/logs

  api:
    hostname: ${API_HOSTNAME}
    restart: always
    depends_on:
      - rabbit
    image: mathiser/inference_server:private_api_dev
    networks:
      - inference_server_private
    ports:
      - ${API_PORT}
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
     - ./mounts/data:/data
     - ./mounts/logs:/logs

  rabbit:
    restart: always
    image: ${RABBIT_DOCKER_TAG}
    networks:
      - inference_server_private
    ports:
      - ${RABBIT_PORT}
    hostname: ${RABBIT_HOSTNAME}
    volumes:
      - ./rabbit/timeout.conf:/etc/rabbitmq/conf.d/timeout.conf

  job-consumer:
    hostname: consumer
    restart: always
    ports:
      - "80" # Dummy port to make traefik quiet
    networks:
      - inference_server_private
    depends_on:
      - rabbit
      - api
    env_file:
      - .env
    image: mathiser/inference_server:job_consumer_dev

    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ${DOCKER_SOCKET}:${DOCKER_SOCKET}

  dashboard:
    image: grafana/grafana-enterprise:9.0.2-ubuntu
    networks:
      - inference_server_private
    environment:
      - "GF_INSTALL_PLUGINS=frser-sqlite-datasource"
      #- “GF_SERVER_ROOT_URL=https://dashboard.${PROXY_URL}”
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.grafana.rule=Host(`omen.onerm.dk`) && PathPrefix(`/grafana`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.tls=true
    volumes:
      - ./mounts/data/database/database.db:/var/lib/grafana/database.db:ro
      - config_volume:/etc/grafana:rw
      - home_volume:/usr/share/grafana:rw

networks:
  inference_server_private:
    external: true

volumes:
  config_volume:
  home_volume: