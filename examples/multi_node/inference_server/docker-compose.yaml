version: '3'

services:
  reverse-proxy:
    restart: always
    image: traefik:v2.6
    hostname: reverse-proxy
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.websecure.address=:443
      - --providers.file.directory=/configuration/
      - --providers.file.watch=true
    ports:
      - 443:443
    networks:
      - inference_server_private
    labels:
      traefik.enable: true
    volumes:
      - ./traefik/certs/:/tools/certs/
      - ./traefik/configuration/:/configuration/
      - ${DOCKER_SOCKET}:${DOCKER_SOCKET}

  public-api:
    restart: always
    networks:
      - inference_server_private
    image: mathiser/inference_server:public_api_dev
    hostname: ${PUBLIC_API_HOSTNAME}
    command: python main.py
    env_file:
      - .env
    ports:
      - ${PUBLIC_API_PORT}
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_${PUBLIC_API_HOSTNAME}.rule=Host(`${PROXY_URL}`)"
      - "traefik.http.services.${PROJECT_NAME}_${PUBLIC_API_HOSTNAME}.loadbalancer.server.port=${PUBLIC_API_PORT}"
      - "traefik.http.routers.${PROJECT_NAME}_${PUBLIC_API_HOSTNAME}.tls=${HTTPS_ON}"
    volumes:
      - ./mounts/logs:/logs

  api:
    hostname: ${API_HOSTNAME}
    command: python main.py
    restart: always
    depends_on:
      - rabbit
    image: mathiser/inference_server:private_api_dev
    networks:
      - inference_server_private
    ports:
      - ${API_PORT}
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
     - ./mounts/data:/data
     - ./mounts/logs:/logs

  rabbit:
    restart: always
    image: ${RABBIT_DOCKER_TAG}
    networks:
      - inference_server_private
    ports:
      - ${RABBIT_PORT}
    hostname: ${RABBIT_HOSTNAME}
    volumes:
      - ./rabbit/timeout.conf:/etc/rabbitmq/conf.d/timeout.conf

networks:
  inference_server_private:
    external: true